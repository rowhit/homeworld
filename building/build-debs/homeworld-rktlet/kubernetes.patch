--- ./pkg/kubelet/container/runtime.go	2017-07-21 04:06:35.000000000 -0400
+++ ./pkg/kubelet/container/runtime.go	2017-07-22 01:10:56.698207035 -0400
@@ -47,6 +47,7 @@
 // information about the different image types.
 type ImageSpec struct {
 	Image string
+	FetchInfo string
 }
 
 // ImageStats contains statistics about all the images currently available.
--- ./pkg/kubelet/images/image_manager.go	2017-07-21 04:06:35.000000000 -0400
+++ ./pkg/kubelet/images/image_manager.go	2017-07-22 01:52:51.819150581 -0400
@@ -98,7 +98,12 @@
 		return "", msg, ErrInvalidImageName
 	}
 
-	spec := kubecontainer.ImageSpec{Image: image}
+	fetchInfo := ""
+	if foundInfo, ok := pod.Annotations["homeworld.mit.edu/unsupported-fetch-info"]; ok {
+		fetchInfo = foundInfo
+	}
+
+	spec := kubecontainer.ImageSpec{Image: image, FetchInfo: fetchInfo}
 	imageRef, err := m.imageService.GetImageRef(spec)
 	if err != nil {
 		msg := fmt.Sprintf("Failed to inspect image %q: %v", container.Image, err)
--- ./pkg/kubelet/rkt/image.go	2017-07-21 04:06:35.000000000 -0400
+++ ./pkg/kubelet/rkt/image.go	2017-07-22 01:58:17.953733435 -0400
@@ -47,6 +47,8 @@
 //
 func (r *Runtime) PullImage(image kubecontainer.ImageSpec, pullSecrets []v1.Secret) (string, error) {
 	img := image.Image
+	fetchInfo := image.FetchInfo
+
 	// TODO(yifan): The credential operation is a copy from dockertools package,
 	// Need to resolve the code duplication.
 	repoToPull, _, _, err := parsers.ParseImageName(img)
@@ -77,10 +79,19 @@
 		return "", err
 	}
 
+	var builtPath string
+	if fetchInfo == "aci" {
+		builtPath = img
+	} else if fetchInfo == "docker" || fetchInfo == "" {
+		builtPath = dockerPrefix + img
+	} else {
+		return "", fmt.Errorf("rkt: Unknown fetchInfo value: %v", fetchInfo)
+	}
+
 	// Today, `--no-store` will fetch the remote image regardless of whether the content of the image
 	// has changed or not. This causes performance downgrades when the image tag is ':latest' and
 	// the image pull policy is 'always'. The issue is tracked in https://github.com/coreos/rkt/issues/2937.
-	if _, err := r.cli.RunCommand(&config, "fetch", "--no-store", dockerPrefix+img); err != nil {
+	if _, err := r.cli.RunCommand(&config, "fetch", "--no-store", builtPath); err != nil {
 		glog.Errorf("Failed to fetch: %v", err)
 		return "", err
 	}
